/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'
import { GroupProps } from 'react-three-fiber'; 

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { Vector3 } from 'three'
import { useHover } from '../modelUtils'; 


type GLTFResult = GLTF & {
  nodes: {
    ['A-1.001_1']: THREE.Mesh
    ['A-1.001_2']: THREE.Mesh
  }
  materials: {
    ['diffuse_0_0_0_255.001']: THREE.MeshStandardMaterial
    ['Wood-3 Ver.001']: THREE.MeshStandardMaterial
  }
}

interface EnvelopeModelProps extends GroupProps {
  meshActive: boolean; 
  meshHoveredOver: boolean;
  meshMaterial?: THREE.Material; 

  clipIntersection?: boolean;
	clippingPlanes?: THREE.Plane[];   //For viewing different floors
	clipShadows?: boolean;


}

export default function Model(props: EnvelopeModelProps) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/Swift/A1.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
        <group name="A-1001" rotation={[Math.PI / 2, 0, 0]} > {/**We move the mesh in the z-axis by 1.2 in order to create a more easily referenced starting position */}
          <mesh 
            name="A-1.001_1" 
            material={materials['diffuse_0_0_0_255.001']} 
            geometry={nodes['A-1.001_1'].geometry} 
            material-color={(props.meshActive || props.meshHoveredOver) ? 'red' : materials['diffuse_0_0_0_255.001'].color}
          />
          <mesh 
            name="A-1.001_2" 
            material={materials['Wood-3 Ver.001']} 
            geometry={nodes['A-1.001_2'].geometry} 
          />
        </group>
    </group>
  )
}

useGLTF.preload('/Swift/A1.glb')
